name: Full CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  unit-test:
    name: 🧪 Unit Test
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🧪 Run unit tests
        env:
          NODE_ENV: test
          JWT_ACCESS_SECRET: "replace-with-secure-random-string"
          JWT_REFRESH_SECRET: "replace-with-secure-random-string"
        run: npm run unit

  staging:
    name: 🚀 Deploy to Staging
    runs-on: ubuntu-latest
    needs: [unit-test]

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🐳 Cleanup previous container
        run: docker rm -f staging-app || true

      - name: 🐳 Build and run app
        run: |
          docker build -t auth-api:latest .
          docker run -d \
            --name staging-app \
            -e DATABASE_URL=./staging_auth.db \
            -v $(pwd)/staging_auth.db:/app/staging_auth.db \
            -p 3000:3000 \
            auth-api:latest

  integration-test:
    name: 🧪 Integration Test
    runs-on: ubuntu-latest
    needs: [unit-test, staging]

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🐳 Build test container
        run: docker build -t auth-api-test:latest .

      - name: 🧪 Run integration tests in Docker
        run: |
          docker run --rm \
            -e DATABASE_URL=./integration_test_auth.db \
            -e JWT_ACCESS_SECRET=${{ secrets.JWT_ACCESS_SECRET }} \
            -e JWT_REFRESH_SECRET=${{ secrets.JWT_REFRESH_SECRET }} \
            auth-api-test:latest npm run integration

  production:
    name: 🚀 Deploy to Production
    runs-on: ubuntu-latest
    needs: [integration-test, unit-test, staging]

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🐳 Cleanup previous container
        run: docker rm -f prod-app || true

      - name: 🐳 Build and run production app
        env:
          JWT_ACCESS_SECRET: ${{ secrets.JWT_ACCESS_SECRET }}
          JWT_REFRESH_SECRET: ${{ secrets.JWT_REFRESH_SECRET }}
          SMTP_USER: ${{ secrets.SMTP_USER }}
          SMTP_PASS: ${{ secrets.SMTP_PASS }}
        run: |
          docker build -t auth-api-prod:latest .
          docker run -d \
            --name prod-app \
            -e DATABASE_URL=./prod_auth.db \
            -e JWT_ACCESS_SECRET=${{ secrets.JWT_ACCESS_SECRET }} \
            -e JWT_REFRESH_SECRET=${{ secrets.JWT_REFRESH_SECRET }} \
            -v $(pwd)/prod_auth.db:/app/prod_auth.db \
            -p 3000:3000 \
            auth-api-prod:latest
